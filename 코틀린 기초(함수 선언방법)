👋 Kotlin Basic 함수 선언 방법
- 함수에 기본 구조

fun getName(): Unit{

    println("재밌는 개발 라이프")

}

코틀린에서는 fun이라는 키워드로 함수를 정의합니다. 그리고 함수명, () 파라미터 값을 설정하며, : 뒤에는 반환 타입을 설정합니다.

Unit은 자바에서 사용되는 void와 동일합니다.

코틀린에서는 타입 추론이 가능하기 때문에 아래와 같이 반환 타입을 안 적어도 컴파일 시 알아서 타입을 정의합니다.

fun getName(){

    println("재밌는 개발 라이프")

}


기본 사용법
위에 설명을 보면 파라미터는 () 소괄호 안에 정의할 수 있다고 말했습니다.
//name이라는 파라미터가 있는 함수
fun getName(name:String){

    println(name)

}

//호출
fun main() {
    getName("재밌는 개발 라이프")

    /**
     * 실행 결과
     *
     * 재밌는 개발 라이프
     */
}

name이라는 파라미터를 하나 정의했습니다. 한 개가 아닌 여러 개를 선언하고 싶다면, 이름이 다른 변수명으로 쉼표(,) 뒤에 새로운 파라미터를 선언할 수 있습니다.

vararg 파라미터
vararg 파라미터는 우리가 전달받는 값이 만약 정해져 있지 않은 상황에서 사용하기 좋은 한정자입니다.



 한정자란 : 속성(변수)이나 기능(함수) 앞에 어떻게 코드를 노출하는지 지정할 때 말은 한다.

 우리는 보통 public 이런 식으로 앞에 접근 제어자처럼 앞에 붙여주는 부분이다.


fun main() {
val kotlin = "🙂"
val test = 1
val test2 = 3
println(kotlin)
println(test)
println(test2)
println(test+test2)
println("1과 10중 최댓값은 ${maxOf(1,10)}입니다.");
//함수 선언1
println("함수 선언 방법 1번 결과값 : ${sum(10,20)}")
}



//함수 선언방법 1
fun sum(a:Int, b:Int): Int {
return a + b
}

